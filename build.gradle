
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id "io.freefair.lombok" version "8.10"
	id 'org.jetbrains.kotlin.jvm'
}

group = 'org.apw'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql:42.7.2'
	implementation 'org.projectlombok:lombok:1.18.28'
	annotationProcessor 'org.projectlombok:lombok:1.18.28'

	//implementation 'com.google.firebase:firebase-admin:9.0.0'
	//implementation("com.google.firebase:firebase-auth")
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//Spring security
	implementation "org.springframework.boot:spring-boot-starter-security"
	//JWT
	implementation 'com.auth0:java-jwt:4.4.0'
	//
	implementation("org.jetbrains.kotlin:kotlin-reflect:2.0.20")
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

tasks.named('test') {
	useJUnitPlatform()
}

task determineArtifactName {
	doLast {
		// You can put custom logic here to calculate the artifact name dynamically.
		// For demonstration purposes, let's assume it's determined based on project properties.
		def dynamicArtifactName = project.property('version')
		def projectName = project.name
		if (dynamicArtifactName == null) {
			throw new GradleException("Custom artifact name not defined.")
		}
		println "$projectName-${dynamicArtifactName}.jar"
	}
}
